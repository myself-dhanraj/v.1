BUBBLE SORT!!

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

void bubbleSort(int arr[] , int n){  //O(N^2)

    bool isswap = false;
    for(int i=0;i<n-1;i++){
        for(int j=0;j<n-i-1;j++){
            if(arr[j]>arr[j+1]){
                swap(arr[j],arr[j+1]);
                isswap = true;
            }
        }
        if(!isswap){ // already sorted
            return ;
        }
    }
}

void printArrar(int arr[] , int n){
     for(int i=0;i<n;i++){
         cout<<arr[i]<<" "<<endl;
     }
    
}

int main(){
    int n = 5;
    int arr[] = {4,1,5,2,3};
    
    bubbleSort(arr,n);
    printArrar(arr,n);
    
    
    return 0;

Selected Sort:

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

void printArray(int arr[], int n){
    for(int i=0;i<n;i++){
        cout<<arr[i]<<" "<<endl;
    }
}

void selectionSort(int arr[] , int n ){
    for(int i = 0 ; i<n-1 ; i++){
        int smallIdx = i;
        for(int j=i+1 ; j<n ; j++){
            if(arr[j]<arr[smallIdx]){
                smallIdx = j;
            }
        }
        swap (arr [i] , arr[smallIdx]);
    }
}

int main(){
    
    int n = 5;
    int arr[] = {4,1,5,2,3};
    
    selectionSort(arr,n);
    printArray(arr,n);
    
    return 0;
}
    
}

INSTERTION SORT: 

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

void printArray(int arr[], int n){
    for(int i=0;i<n;i++){
        cout<<arr[i]<<" "<<endl;
    }
}

void insertionSort(int arr[] , int n){ //O(n^2)
    for(int i = 1 ; i< n ; i++){
        int curr = arr[i];
        int prev = i - 1;
        
        while(prev >= 0 && arr[prev]>curr){  // "< DESCENDING ORDER "
            arr[prev+1]=arr[prev];
            prev--;
        }
        arr[prev+1]=curr;
    }
}

int main(){
    
    int n = 5;
    int arr[] = {4,1,5,2,3};
    
    insertionSort(arr,n);
    printArray(arr,n);
    
    return 0;
}

LEET CODE 75 :

class Solution {
public:
    void sortColors(vector<int>& nums) {  //O(2n)
        int n = nums.size();
        int count0 = 0 , count1 = 0 ,count2 = 0;

        for(int i = 0; i<n ; i++){  //o(n)
            if(nums[i] == 0){
                count0++;
            }
            else if(nums[i] == 1){
                count1++;
            }
            else if(nums[i] == 2){
                count2++;
            }
        }
        int indx = 0;
        for(int i =0;i<count0;i++){
            nums[indx++] = 0;
        }
        for(int i =0;i<count1;i++){
            nums[indx++] = 1;
        }
        for(int i =0;i<count2;i++){
            nums[indx++] = 2;
        }
    }
};

