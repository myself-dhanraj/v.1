PROBLEM 136: LEET CODE

Single Number

class Solution {
public:
    int singleNumber(vector<int>& nums) {

        int ans = 0;

        for(int val : nums){
            ans = ans^val;
        }
        return ans;
    }
};

Problem 53 : max subarry using Kadane's Algorithm

class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int currSum = 0, maxSum = INT_MIN;

        for(int val : nums){
            currSum+= val;
            maxSum = max(currSum , maxSum);

            if (currSum<0){
                currSum = 0;
            }
        }

         return maxSum;
    }
};

Problem 169 : Majority element

class Solution {
public:
    int majorityElement(vector<int>& nums) {

        int n = nums.size();

        for(int val : nums){
            int freq = 0;
            for(int el : nums){
                if ( el == val ){
                    freq ++;
                }
            }
            if(freq>n/2){
                return val;
            }
        }
        return -1;
        
    }
};

same problem in Optimized version:

class Solution {
public:
    int majorityElement(vector<int>& nums) {

        int n = nums.size();

        sort(nums.begin(),nums.end()) ;

        int freq = 1 , ans=nums[0];
        for(int i=1;i<n;i++){
            if(nums[i]==nums[i-1]){
                freq++;
            }else freq = 1, ans = nums[i];
            if (freq>n/2){
                return ans;
            }
        }
        return ans; 
    }
};

Moore's Voting Algorithm

class Solution {
public:
    int majorityElement(vector<int>& nums) {

        int freq = 0 , ans = 0;

        for(int i = 0; i<nums.size() ; i++){
            if(freq==0){
                ans = nums[i];
            }
            if (ans == nums[i]){
                freq++;
            }
            else {freq--;
            }
        }  
        int count = 0;
        for(int val:nums){
            if (val==ans){
                count++;
            }
        }
        if (int count > n/2) =>ans;
        else=>-1;


        return ans;
    }
};
